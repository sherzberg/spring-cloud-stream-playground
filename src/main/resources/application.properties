# we want to bind the output message channel to the Kafka myTopic, and it says that we want to serialize the payload into JSON.
spring.cloud.stream.bindings.output.destination=myTopic
spring.cloud.stream.bindings.output.content-type=application/json

spring.cloud.stream.bindings.input.destination=myTopic
spring.cloud.stream.bindings.input.content-type=application/json

# Tell Spring Cloud Stream the host name where Kafka and Zookeeper are running – defaults are localhost
# spring.cloud.stream.kafka.binder.zkNodes=localhost
# spring.cloud.stream.kafka.binder.brokers=localhost

# Specify the consumer group this application belongs to – so if another instance of this application is deployed, events are distributed among all instances.
spring.cloud.stream.bindings.input.group=myGroup

# For development purposes, set resetOffsets of the channel input to true which means that on new deployment,
# all events are processed again because the Kafka offset is reset.
# It could also be a strategy to do that on every startup – having all the state just in memory – and in Kafka.
spring.cloud.stream.kafka.bindings.input.consumer.resetOffsets=false